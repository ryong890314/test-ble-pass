{"version":3,"sources":["dashboard/Header.js","dashboard/DayPage.js","dashboard/SubHeader.js","dashboard/Main.js","menu/Dashboard.js","statistics/TotalPage.js","statistics/Header.js","statistics/SubMenu.js","menu/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","icon","faBars","visitData","labels","datasets","data","backgroundColor","borderColor","fill","visitTimeData","DayPage","options","scales","xAxes","gridLines","display","yAxes","color","ticks","min","max","stepSize","legend","height","border","SubHeader","useRouteMatch","path","url","activeStyle","id","to","activeClassName","exact","Main","Dashboard","Total","SubMenu","TotalPage","Statistics","App","faTable","faChartPie","faUser","faBullhorn","faCog","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6446d43.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n      <span className=\"title\">대시보드</span>\n      <span className=\"option\"><FontAwesomeIcon icon={faBars} /></span>\n    </div>\n  );\n}\n\nexport default Header;\n","import { Line, Bar } from 'react-chartjs-2';\n\nfunction DayPage() {\n  return (\n    <>\n    <div className=\"layout_1\">\n      <p className=\"title\">방문수</p>\n      <Line\n        options={{\n          scales: {\n            xAxes: [{\n              gridLines:{\n                display: false,\n              }\n            }],\n            yAxes: [{\n              gridLines:{\n                color: \"#eaeaea\",\n              },\n              ticks: {\n                min: 0,\n                max: 1000,\n                stepSize : 200,\n              }\n            }]\n          },\n          legend: {\n            display: false,\n          }\n        }}\n        data={visitData}\n        height={100}\n      />\n    </div>\n\n    <div className=\"layout_1\">\n    <p className=\"title\">시간대별 방문수</p>\n    <Bar\n      options={{\n        scales: {\n          xAxes: [{\n            gridLines:{\n              display: false,\n            }\n          }],\n          yAxes: [{\n            gridLines:{\n              color: \"#eaeaea\",\n            },\n            ticks: {\n              min: 0,\n              max: 50,\n              stepSize : 10,\n            }\n          }]\n        },\n        legend: {\n          display: false,\n        }\n      }}\n      data={visitTimeData}\n      height={60}\n    />\n  </div>\n\n  <div className=\"layout_1\">\n   <p className=\"title\">방문고객</p>\n   <table border=\"1\">\n    <th>방문일시</th>\n    <th>이름</th>\n    <th>전화번호</th>\n    <tr>\n        <td>2021-01-21 16:44</td>\n        <td>김*수</td>\n        <td>010-****-1234</td>\n    </tr>\n    <tr>\n        <td>2021-01-21 14:24</td>\n        <td>박*수</td>\n        <td>010-****-3456</td>\n    </tr>\n    <tr>\n        <td>2021-01-21 14:14</td>\n        <td>이*수</td>\n        <td>010-****-1234</td>\n    </tr>\n    <tr>\n        <td>2021-01-21 13:45</td>\n        <td>김*훈</td>\n        <td>010-****-1234</td>\n    </tr>\n    <tr>\n        <td>2021-01-21 13:32</td>\n        <td>김*지</td>\n        <td>010-****-1234</td>\n    </tr>\n   </table>\n  </div>\n  </>\n  );\n  \n}\n\nconst visitData = {\n  labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n  datasets: [\n    {\n      data: [634, 513, 756, 252, 235, 456, 323, 400, 460, 100],\n      backgroundColor: 'rgba(43, 144, 217, .2)',\n            borderColor: 'rgb(43, 144, 217)',\n            fill: 'start',\n    }\n  ]\n};\n\nconst visitTimeData = {\n  labels: ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],\n  datasets: [\n    {\n      data: [5, 8, 7, 6, 8, 10, 7, 7, 5, 9, 14, 15, 18,25,32, 35,39, 37,35, 20, 12, 7, 6, 5],\n      backgroundColor: 'rgba(43, 144, 217, .2)',\n            borderColor: 'rgb(43, 144, 217)',\n            fill: 'start',\n    }\n  ]\n};\n\nexport default DayPage;\n","import ReactDOM from 'react-dom';\nimport { Link, Route, Switch, BrowserRouter as Router, useParams,\n  useRouteMatch, NavLink, Redirect } from \"react-router-dom\";\n\nimport DayPage from './DayPage';\n\nfunction SubHeader() {\n\n  let { path, url } = useRouteMatch();  \n\n  const activeStyle = {\n    color: '#2B90D9',\n  };\n\n  return (\n    <>\n    <div className=\"SubHeader\">\n      <ul className=\"visit_ul\">\n        <li className=\"visit_li\">\n          <p className=\"stat_title\">오늘 방문수</p>\n          <p className=\"stat_text\">100</p>\n        </li>\n        <li className=\"visit_li\">\n          <p className=\"stat_title\">어제 방문수</p>\n          <p className=\"stat_text\">300</p>\n        </li>\n        <li className=\"visit_li\">\n          <p className=\"stat_title\">누적 방문수</p>\n          <p className=\"stat_text\">100,000</p>\n        </li>\n        <li className=\"visit_li\">\n          <span className=\"datetime\" id=\"timer\">\n            <p className=\"date dumy\">0000-00-00</p>\n            <span className=\"time dumy\">00:00:00</span>\n          </span>\n        </li>\n      </ul>\n\n      <ul className=\"nav_ul\">\n        <li className=\"nav_li\"><NavLink to={`${url}/day`} activeStyle={activeStyle} activeClassName=\"current\">일간</NavLink></li>\n        <li className=\"nav_li\"><NavLink to={`${url}/week`} activeStyle={activeStyle} activeClassName=\"current\">주간</NavLink></li>\n        <li className=\"nav_li\"><NavLink to={`${url}/month`} activeStyle={activeStyle} activeClassName=\"current\">월간</NavLink></li>\n      </ul>\n\n    </div>\n\n    <div className=\"MainPage\">\n      <Switch>\n        <Route exact path={path}>\n          <Redirect to={`${path}/day`} />\n        </Route>\n        <Route path={`${path}/day`}>\n          <DayPage />\n        </Route>\n        <Route path={`${path}/week`}>\n          <DayPage />\n        </Route>\n        <Route path={`${path}/month`}>\n          <DayPage />\n        </Route>\n      </Switch>\n    </div>\n\n    </>\n  );\n}\n\n// function tick() {\n//   const date = new Date();\n//   const element = (\n//     <>\n//     <p className=\"date\">{ date.getFullYear() + \"-\" + (\"00\" + (date.getMonth()+1)).slice(-2) + \"-\" + (\"00\" + date.getDate()).slice(-2)}</p>\n//     <span className=\"time\">{date.toLocaleTimeString('en-GB')}</span>\n//     </>\n//   );\n//   ReactDOM.render(element, document.getElementById('timer'));\n// }\n\n// setInterval(tick, 1000);\n\nexport default SubHeader;\n","import Header from './Header';\nimport SubHeader from './SubHeader';\n\nfunction Main() {\n  return (\n    <div className=\"Main\">\n      <Header />\n      <SubHeader />\n    </div>\n  );\n}\n\nexport default Main;\n","import Main from '../dashboard/Main';\n\nfunction Dashboard() {\n  return (\n    <Main />\n  );\n}\n\nexport default Dashboard;\n","import { Line, Bar } from 'react-chartjs-2';\n\nfunction Total() {\n  return (\n    <>\n    <div className=\"layout_1\">\n      <p className=\"title\">방문수</p>\n      <Line\n        options={{\n          scales: {\n            xAxes: [{\n              gridLines:{\n                display: false,\n              }\n            }],\n            yAxes: [{\n              gridLines:{\n                color: \"#eaeaea\",\n              },\n              ticks: {\n                min: 0,\n                max: 1000,\n                stepSize : 200,\n              }\n            }]\n          },\n          legend: {\n            display: false,\n          }\n        }}\n        data={visitData}\n        height={100}\n      />\n    </div>\n\n    <div className=\"layout_1\">\n    <p className=\"title\">시간대별 방문수</p>\n    <Bar\n      options={{\n        scales: {\n          xAxes: [{\n            gridLines:{\n              display: false,\n            }\n          }],\n          yAxes: [{\n            gridLines:{\n              color: \"#eaeaea\",\n            },\n            ticks: {\n              min: 0,\n              max: 50,\n              stepSize : 10,\n            }\n          }]\n        },\n        legend: {\n          display: false,\n        }\n      }}\n      data={visitTimeData}\n      height={60}\n    />\n  </div>\n\n  <div className=\"layout_1\">\n   <p className=\"title\">방문고객</p>\n   <table border=\"1\">\n    <th>방문일시</th>\n    <th>이름</th>\n    <th>전화번호</th>\n    <tr>\n        <td>2021-01-21 16:44</td>\n        <td>김*수</td>\n        <td>010-****-1234</td>\n    </tr>\n    <tr>\n        <td>2021-01-21 14:24</td>\n        <td>박*수</td>\n        <td>010-****-3456</td>\n    </tr>\n    <tr>\n        <td>2021-01-21 14:14</td>\n        <td>이*수</td>\n        <td>010-****-1234</td>\n    </tr>\n    <tr>\n        <td>2021-01-21 13:45</td>\n        <td>김*훈</td>\n        <td>010-****-1234</td>\n    </tr>\n    <tr>\n        <td>2021-01-21 13:32</td>\n        <td>김*지</td>\n        <td>010-****-1234</td>\n    </tr>\n   </table>\n  </div>\n  </>\n  );\n  \n}\n\nconst visitData = {\n  labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n  datasets: [\n    {\n      data: [634, 513, 756, 252, 235, 456, 323, 400, 460, 100],\n      backgroundColor: 'rgba(43, 144, 217, .2)',\n            borderColor: 'rgb(43, 144, 217)',\n            fill: 'start',\n    }\n  ]\n};\n\nconst visitTimeData = {\n  labels: ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'],\n  datasets: [\n    {\n      data: [5, 8, 7, 6, 8, 10, 7, 7, 5, 9, 14, 15, 18,25,32, 35,39, 37,35, 20, 12, 7, 6, 5],\n      backgroundColor: 'rgba(43, 144, 217, .2)',\n            borderColor: 'rgb(43, 144, 217)',\n            fill: 'start',\n    }\n  ]\n};\n\n\nexport default Total;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\n\nfunction Header() {\n  return (\n    <div className=\"Header bottom\">\n      <span className=\"title\">종합</span>\n      <span className=\"option\"><FontAwesomeIcon icon={faBars} /></span>\n    </div>\n  );\n}\n\nexport default Header;\n","import { Link, Route, Switch, BrowserRouter as Router, useParams,\n  useRouteMatch, NavLink, Redirect } from \"react-router-dom\";\n\nimport TotalPage from './TotalPage';\nimport Header from './Header';\n\nfunction SubMenu() {\n\n  let { path, url } = useRouteMatch();  \n\n  const activeStyle = {\n    color: '#2B90D9',\n  };\n\n  return (\n    <>\n    <div className=\"SubMenu\">\n\n      <p className=\"title\">통계</p>\n      <p className=\"subtitle\">구분</p>\n\n      <ul className=\"nav_ul\">\n        <li className=\"nav_li\"><NavLink to={`${url}/total`} activeStyle={activeStyle} activeClassName=\"current\"><p>종합</p></NavLink></li>\n        <li className=\"nav_li\"><NavLink to={`${url}/newcustomer`} activeStyle={activeStyle} activeClassName=\"current\">신규고객</NavLink></li>\n        <li className=\"nav_li\"><NavLink to={`${url}/revisit`} activeStyle={activeStyle} activeClassName=\"current\">재방문고객</NavLink></li>\n        <li className=\"nav_li\"><NavLink to={`${url}/secession`} activeStyle={activeStyle} activeClassName=\"current\">이탈고객</NavLink></li>\n      </ul>\n\n    </div>\n\n    <div className=\"Main\">\n      <Header />\n\n      <div className=\"MainPage sub\">\n        <Switch>\n          <Route exact path={path}>\n            <Redirect to={`${path}/total`} />\n          </Route>\n          <Route path={`${path}/total`}>\n            <TotalPage />\n          </Route>\n          <Route path={`${path}/newcustomer`}>\n            <TotalPage />\n          </Route>\n          <Route path={`${path}/revisit`}>\n            <TotalPage />\n          </Route>\n          <Route path={`${path}/secession`}>\n            <TotalPage />\n          </Route>\n        </Switch>\n      </div>\n\n    </div>\n\n    \n    </>\n  );\n}\n\nexport default SubMenu;\n","import SubMenu from '../statistics/SubMenu';\n\nfunction Statistics() {\n  return (\n    <>\n      <SubMenu />\n    </>\n  );\n}\n\nexport default Statistics;\n","import React from 'react';\nimport { Link, Route, Switch, Redirect, NavLink, BrowserRouter as Router } from \"react-router-dom\";\nimport './App.css';\nimport Dashboard from './menu/Dashboard';\nimport Statistics from './menu/Statistics';\n// import SubMenu from './dashboard/SubMenu';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTable, faChartPie, faUser, faCog, faBullhorn } from '@fortawesome/free-solid-svg-icons'\n\nfunction App() {\n\n  const activeStyle = {\n    color: '#2B90D9',\n  };\n\n  return (\n    <Router>\n      <div className=\"Container\">\n\n        <div className=\"Menu\">\n          <ul>\n            <li>\n              <NavLink to=\"/dashboard\" activeStyle={activeStyle}>\n              <span className=\"menu_icon\"><FontAwesomeIcon icon={faTable} /></span>\n              <span className=\"menu_title\">대시보드</span>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/statistics\" activeStyle={activeStyle}>\n                <span className=\"menu_icon\"><FontAwesomeIcon icon={faChartPie} /></span>\n                <span className=\"menu_title\">통계</span>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/customer\" activeStyle={activeStyle}>\n                <span className=\"menu_icon\"><FontAwesomeIcon icon={faUser} /></span>\n                <span className=\"menu_title\">고객</span>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/marketing\" activeStyle={activeStyle}>\n                <span className=\"menu_icon\"><FontAwesomeIcon icon={faBullhorn} /></span>\n                <span className=\"menu_title\">마케팅</span>\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/setting\" activeStyle={activeStyle}>\n                <span className=\"menu_icon\"><FontAwesomeIcon icon={faCog} /></span>\n                <span className=\"menu_title\">설정</span>\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n       \n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/dashboard\" />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/statistics\">\n            <Statistics />\n          </Route>\n          <Route path=\"/customer\">\n            <Statistics />\n          </Route>\n          <Route path=\"/marketing\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/setting\">\n            <Statistics />\n          </Route>\n        </Switch>\n        \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}